-- Get number of monthly active customers.
SELECT * FROM SAKILA.RENTAL;

CREATE OR REPLACE VIEW SAKILA.USER_ACTIVITY AS
WITH CTE_USER_ACTIVITY AS (
SELECT DISTINCT CUSTOMER_ID, DATE_FORMAT(RENTAL_DATE, '%m') AS ACTIVITY_MONTH,
DATE_FORMAT(RENTAL_DATE, '%Y') AS ACTIVITY_YEAR
FROM SAKILA.RENTAL)
SELECT ACTIVITY_YEAR, ACTIVITY_MONTH, COUNT(DISTINCT CUSTOMER_ID) AS ACTIVE_USERS
FROM CTE_USER_ACTIVITY
GROUP BY 1,2
ORDER BY 1,2 ASC;

SELECT * FROM SAKILA.USER_ACTIVITY;

-- Get active users in the previous month.
-- Get the change in the number of active customers.
WITH CTE_USER_ACTIVITY AS (
SELECT 
   ACTIVITY_YEAR, 
   ACTIVITY_MONTH,
   ACTIVE_USERS, 
   LAG(ACTIVE_USERS, 1) over (order by ACTIVITY_YEAR, ACTIVITY_MONTH) AS PREVIOUS_MONTH_USERS
FROM SAKILA.USER_ACTIVITY)
SELECT 
	ACTIVITY_YEAR, 
	ACTIVITY_MONTH,
	ACTIVE_USERS,  
	PREVIOUS_MONTH_USERS, 
   (ACTIVE_USERS - PREVIOUS_MONTH_USERS) AS DIFFERENCE
FROM CTE_USER_ACTIVITY
;

-- Get retained customers for every month.
CREATE OR REPLACE VIEW SAKILA.RETAINED_CUSTOMERS AS
WITH CTE_RETAINED_CUSTOMERS AS (
SELECT CUSTOMER_ID, 
DATE_FORMAT(RENTAL_DATE, '%Y') AS ACTIVITY_YEAR,
DATE_FORMAT(RENTAL_DATE, '%m') AS ACTIVITY_MONTH
FROM SAKILA.RENTAL)
SELECT DISTINCT A.CUSTOMER_ID, A.ACTIVITY_YEAR, A.ACTIVITY_MONTH, B.CUSTOMER_ID AS NEXT_MONTH_USERS
FROM CTE_RETAINED_CUSTOMERS A
INNER JOIN CTE_RETAINED_CUSTOMERS B
ON A.CUSTOMER_ID = B.CUSTOMER_ID
AND A.ACTIVITY_MONTH = B.aACTIVITY_MONTH + 1
ORDER BY A.CUSTOMER_ID;

SELECT * FROM SAKILA.RETAINED_CUSTOMERS;

CREATE OR REPLACE VIEW SAKILA.RETENTION_DIFFERENCE AS
SELECT ACTIVITY_YEAR, ACTIVITY_MONTH, COUNT(DISTINCT NEXT_MONTH_USERS) AS RETAINED_CUSTOMERS
FROM SAKILA.RETAINED_CUSTOMERS
GROUP BY 1,2
ORDER BY 1,2;

WITH CTE_RETENTION AS (
SELECT 
   ACTIVITY_YEAR, 
   ACTIVITY_MONTH,
   RETAINED_CUSTOMERS, 
   LAG(RETAINED_CUSTOMERS, 1) OVER (ORDER BY ACTIVITY_YEAR, ACTIVITY_MONTH) AS PREVIOUS_MONTH_USERS
FROM SAKILA.RETENTION_DIFFERENCE)
SELECT 
	ACTIVITY_YEAR, 
	ACTIVITY_MONTH,
	RETAINED_CUSTOMERS,  
	PREVIOUS_MONTH_USERS, 
   (RETAINED_CUSTOMERS - PREVIOUS_MONTH_USERS) AS DIFFERENCE
FROM CTE_RETENTION
;